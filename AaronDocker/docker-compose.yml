services:
  aaronticketdb:
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: aarondbuser
    volumes:
      - ../TestTicket/20240215.01.21.01.sql:/docker-entrypoint-initdb.d/a.sql
      - postgresdata:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 2s

  aaronblazorapp:
    depends_on:
      aaronticketdb: 
        condition: service_healthy 
    build: ..
    ports:
      - 8998:8080
    environment:
      - Postgres=Host=aaronticketdb;Database=aarondbuser;Port=5432;User id=aarondbuser;Password=postgres;
      - ASPNETCORE_ENVIRONMENT=Development
    
  proxy: 
    image: nginx
    container_name: "aaron_proxy"
    ports:
      - 5467:80
    volumes:
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - aaronblazorapp

  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - prometheusdata:/prometheus
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      # [auth]
      - disable_login_form = true
      # - GF_SECURITY_ADMIN_USER=admin
      # - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./Grafana-dataSources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafanadata:/var/lib/grafana
volumes:
  grafanadata: #declared is all it needs
  prometheusdata: 
  postgresdata: