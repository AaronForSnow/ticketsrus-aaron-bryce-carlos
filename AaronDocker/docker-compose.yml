services:
  aaronticketdb:
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: aarondbuser
    volumes:
      - ../TestTicket/20240215.01.21.01.sql:/docker-entrypoint-initdb.d/a.sql
     # - postgresdata:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 2s

  aaronblazorapp:
    depends_on:
      aaronticketdb: 
        condition: service_healthy 
    build: ..
    ports:
      - 8998:8080
    environment:
      - Postgres=Host=aaronticketdb;Database=aarondbuser;Port=5432;User id=aarondbuser;Password=postgres;
      - ASPNETCORE_ENVIRONMENT=Development
    
  proxy:   #######REPlaced by swag
    image: nginx
    container_name: "aaron_proxy"
    ports:
      - 3366:80
    volumes:
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - aaronblazorapp

  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
      - URL=http://ticketsaaron.duckdns.org
      #- SUBDOMAINS=www,
      - VALIDATION=duckdns
      # - CERTPROVIDER= #optional
      # - DNSPLUGIN=cloudflare #optional
      - DUCKDNSTOKEN=b4445f65-44bf-4cd6-b92d-6ae56f0ee085
      # - EMAIL=<e-mail> #optional
      # - ONLY_SUBDOMAINS=false #optional
      # - EXTRA_DOMAINS=<extradomains> #optional
      - STAGING=true
    volumes:
      - swagdata:/config
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 443:443
      - 80:80 #optional
    restart: unless-stopped

    

  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - prometheusdata:/prometheus
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      # - GF_AUTH_ANONYMOUS_ENABLED=true
      # - GF_AUTH_ANONYMOUS_ORG_ROLE=admin
      # - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./Grafana-dataSources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana  #used to be grafanadata:
volumes:
  grafana-data: #declared is all it needs
  prometheusdata: 
  postgresdata:
  swagdata: