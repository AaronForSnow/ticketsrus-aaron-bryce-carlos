name: aaronrunner
on: [push]
jobs: 
  DeployingPipline: 
    runs-on: self-hosted
    steps: 
      # - name: "cleaning for aaron"
      #   run: |
      #     rm -rf ./ticketsrus-aaron-bryce-carlos
      - name: "clone"
        run: git clone https://${{secrets.AARON_MAR_SECRET}}@github.com/AaronForSnow/ticketsrus-aaron-bryce-carlos.git
      #TODO: uncomment Linting
      # - name: "linting is so simple once their is an .editorconfig"
      #   run: |
      #     cd ./ticketsrus-aaron-bryce-carlos
      #     dotnet format --verify-no-changes
      #TODO UnComment tests
      # - name: "Integration tests"
      #   run: |
      #     cd ./ticketsrus-aaron-bryce-carlos/TestTicket
      #     dotnet test
      # - name: "unit tests"
      #   run: |
      #     cd ./ticketsrus-aaron-bryce-carlos/UnitTest
      #     dotnet test
      # - name: "build with warnings"
      #   run: |
      #     cd ./ticketsrus-aaron-bryce-carlos
      #     dotnet build -warnaserror
      - name: "run build"
        run: |
          cd ./ticketsrus-aaron-bryce-carlos/AaronDocker
          docker compose down
          docker compose up --build -d
      # - name: "Teams Notification"
      #   uses: skitionek/notify-microsoft-teams@master
      #   if: failure()
      #   with:
      #     webhook_url: ${{ secrets.AARONWEBHOOK }}
      #     needs: ${{ toJson(needs) }}
      #     job: ${{ toJson(job) }}
      #     steps: ${{ toJson(steps) }}
      
      # - name: "Failure Notification"
      #   uses: skitionek/notify-microsoft-teams@master
      #   if: failure()
      #   with:
      #     webhook_url: ${{ secrets.AARONWEBHOOK}}
      #     raw: >-
      #       {
      #         "@type": "MessageCard",
      #         "@context": "http://schema.org/extensions",
      #         "correlationId": "0b72cc8a2cea509ba06b41892066784d7f602834",
      #         "themeColor": "#345",
      #         "title": "Aaron had a bad workflow, much shame",
      #         "summary": "[SnowSE/ticketsrus-aaron-bryce-carlos](https://github.com/SnowSE/ticketsrus-aaron-bryce-carlos)",
      #         "sections": [
      #           {
      #             "activityTitle": "",
      #             "activitySubtitle": "failure",
      #             "activityImage": "https://cdn4.iconfinder.com/data/icons/web-design-and-development-88/64/web_application_error_crash_error-512.png"
      #           }
      #         ],
      #         "potentialAction": [
      #           {
      #             "@type": "OpenUri",
      #             "name": "Repository",
      #             "targets": [
      #               {
      #                 "os": "default",
      #                 "uri": "https://github.com/SnowSE/ticketsrus-aaron-bryce-carlos"
      #               }
      #             ]
      #           },
      #           {
      #             "@type": "OpenUri",
      #             "name": "Compare",
      #             "targets": [
      #               {
      #                 "os": "default",
      #                 "uri": "https://github.com/SnowSE/ticketsrus-aaron-bryce-carlos/"
      #               }
      #             ]
      #           }
      #         ],
      #         "text": ""
      #       }

  # deploying:
  #   # needs: lintingAndBuilding
  #   runs-on: self-hosted
  #   steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: deploy
        run: |
          docker build -t 144.17.92.12:5000/aaron/blazor-web:$GITHUB_RUN_ID .

          docker push 144.17.92.12:5000/aaron/blazor-web:$GITGHUB_RUN_ID

          # cd kube-configs
          #   kubectl -n aaron delete
          #   kubectl -n aaron create
            

          cd kube-configs
            kubectl -n aaron delete -f kube/  || true
            kubectl -n aaron create configmap blazor-web-postgres-init --from-file=./TestTicket\2024015.01.21.01.sql
            
          cd ..

          kubectl apply -f kube/

          for file in ./kube/*; do
            echo "Applying $file"
            # kubectl apply -f "$file" # the cat below should do this better
            cat $file | envsub | kubectl apply -f -
          done

          # look up how to add secrets to kubectl the oficial website will have the answers